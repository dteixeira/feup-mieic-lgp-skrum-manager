//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPFApplication.ProjectService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://schemas.datacontract.org/2004/07/ServiceDataTypes")]
    [System.SerializableAttribute()]
    public partial class Project : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlertLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFApplication.ProjectService.Meeting[] MeetingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SprintDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFApplication.ProjectService.Sprint[] SprintsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlertLimit {
            get {
                return this.AlertLimitField;
            }
            set {
                if ((this.AlertLimitField.Equals(value) != true)) {
                    this.AlertLimitField = value;
                    this.RaisePropertyChanged("AlertLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFApplication.ProjectService.Meeting[] Meetings {
            get {
                return this.MeetingsField;
            }
            set {
                if ((object.ReferenceEquals(this.MeetingsField, value) != true)) {
                    this.MeetingsField = value;
                    this.RaisePropertyChanged("Meetings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((this.ProjectIDField.Equals(value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SprintDuration {
            get {
                return this.SprintDurationField;
            }
            set {
                if ((this.SprintDurationField.Equals(value) != true)) {
                    this.SprintDurationField = value;
                    this.RaisePropertyChanged("SprintDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFApplication.ProjectService.Sprint[] Sprints {
            get {
                return this.SprintsField;
            }
            set {
                if ((object.ReferenceEquals(this.SprintsField, value) != true)) {
                    this.SprintsField = value;
                    this.RaisePropertyChanged("Sprints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Meeting", Namespace="http://schemas.datacontract.org/2004/07/ServiceDataTypes")]
    [System.SerializableAttribute()]
    public partial class Meeting : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeetingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeetingID {
            get {
                return this.MeetingIDField;
            }
            set {
                if ((this.MeetingIDField.Equals(value) != true)) {
                    this.MeetingIDField = value;
                    this.RaisePropertyChanged("MeetingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((this.ProjectIDField.Equals(value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sprint", Namespace="http://schemas.datacontract.org/2004/07/ServiceDataTypes")]
    [System.SerializableAttribute()]
    public partial class Sprint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BeginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SprintIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFApplication.ProjectService.Story[] StoriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BeginDate {
            get {
                return this.BeginDateField;
            }
            set {
                if ((this.BeginDateField.Equals(value) != true)) {
                    this.BeginDateField = value;
                    this.RaisePropertyChanged("BeginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Closed {
            get {
                return this.ClosedField;
            }
            set {
                if ((this.ClosedField.Equals(value) != true)) {
                    this.ClosedField = value;
                    this.RaisePropertyChanged("Closed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((this.ProjectIDField.Equals(value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SprintID {
            get {
                return this.SprintIDField;
            }
            set {
                if ((this.SprintIDField.Equals(value) != true)) {
                    this.SprintIDField = value;
                    this.RaisePropertyChanged("SprintID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFApplication.ProjectService.Story[] Stories {
            get {
                return this.StoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.StoriesField, value) != true)) {
                    this.StoriesField = value;
                    this.RaisePropertyChanged("Stories");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Story", Namespace="http://schemas.datacontract.org/2004/07/ServiceDataTypes")]
    [System.SerializableAttribute()]
    public partial class Story : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PreviousStoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFApplication.ProjectService.StoryState StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFApplication.ProjectService.StorySprint[] StorySprintsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFApplication.ProjectService.Task[] TasksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PreviousStory {
            get {
                return this.PreviousStoryField;
            }
            set {
                if ((this.PreviousStoryField.Equals(value) != true)) {
                    this.PreviousStoryField = value;
                    this.RaisePropertyChanged("PreviousStory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((this.ProjectIDField.Equals(value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFApplication.ProjectService.StoryState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StoryID {
            get {
                return this.StoryIDField;
            }
            set {
                if ((this.StoryIDField.Equals(value) != true)) {
                    this.StoryIDField = value;
                    this.RaisePropertyChanged("StoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFApplication.ProjectService.StorySprint[] StorySprints {
            get {
                return this.StorySprintsField;
            }
            set {
                if ((object.ReferenceEquals(this.StorySprintsField, value) != true)) {
                    this.StorySprintsField = value;
                    this.RaisePropertyChanged("StorySprints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFApplication.ProjectService.Task[] Tasks {
            get {
                return this.TasksField;
            }
            set {
                if ((object.ReferenceEquals(this.TasksField, value) != true)) {
                    this.TasksField = value;
                    this.RaisePropertyChanged("Tasks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StoryState", Namespace="http://schemas.datacontract.org/2004/07/ServiceDataTypes")]
    public enum StoryState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InProgress = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Abandoned = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StorySprint", Namespace="http://schemas.datacontract.org/2004/07/ServiceDataTypes")]
    [System.SerializableAttribute()]
    public partial class StorySprint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFApplication.ProjectService.StoryPriority PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SprintIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StoryIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFApplication.ProjectService.StoryPriority Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SprintID {
            get {
                return this.SprintIDField;
            }
            set {
                if ((this.SprintIDField.Equals(value) != true)) {
                    this.SprintIDField = value;
                    this.RaisePropertyChanged("SprintID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StoryID {
            get {
                return this.StoryIDField;
            }
            set {
                if ((this.StoryIDField.Equals(value) != true)) {
                    this.StoryIDField = value;
                    this.RaisePropertyChanged("StoryID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://schemas.datacontract.org/2004/07/ServiceDataTypes")]
    [System.SerializableAttribute()]
    public partial class Task : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EstimationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFApplication.ProjectService.PersonTask[] PersonTasksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFApplication.ProjectService.TaskState StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Estimation {
            get {
                return this.EstimationField;
            }
            set {
                if ((this.EstimationField.Equals(value) != true)) {
                    this.EstimationField = value;
                    this.RaisePropertyChanged("Estimation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFApplication.ProjectService.PersonTask[] PersonTasks {
            get {
                return this.PersonTasksField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonTasksField, value) != true)) {
                    this.PersonTasksField = value;
                    this.RaisePropertyChanged("PersonTasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFApplication.ProjectService.TaskState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StoryID {
            get {
                return this.StoryIDField;
            }
            set {
                if ((this.StoryIDField.Equals(value) != true)) {
                    this.StoryIDField = value;
                    this.RaisePropertyChanged("StoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskID {
            get {
                return this.TaskIDField;
            }
            set {
                if ((this.TaskIDField.Equals(value) != true)) {
                    this.TaskIDField = value;
                    this.RaisePropertyChanged("TaskID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StoryPriority", Namespace="http://schemas.datacontract.org/2004/07/ServiceDataTypes")]
    public enum StoryPriority : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Must = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Should = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Could = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wont = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonTask", Namespace="http://schemas.datacontract.org/2004/07/ServiceDataTypes")]
    [System.SerializableAttribute()]
    public partial class PersonTask : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpentTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SpentTime {
            get {
                return this.SpentTimeField;
            }
            set {
                if ((this.SpentTimeField.Equals(value) != true)) {
                    this.SpentTimeField = value;
                    this.RaisePropertyChanged("SpentTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskID {
            get {
                return this.TaskIDField;
            }
            set {
                if ((this.TaskIDField.Equals(value) != true)) {
                    this.TaskIDField = value;
                    this.RaisePropertyChanged("TaskID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskState", Namespace="http://schemas.datacontract.org/2004/07/ServiceDataTypes")]
    public enum TaskState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Waiting = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InProgress = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Testing = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProjectService.IProjectService")]
    public interface IProjectService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/CreateProject", ReplyAction="http://tempuri.org/IProjectService/CreateProjectResponse")]
        WPFApplication.ProjectService.Project CreateProject(WPFApplication.ProjectService.Project project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateProject", ReplyAction="http://tempuri.org/IProjectService/UpdateProjectResponse")]
        WPFApplication.ProjectService.Project UpdateProject(WPFApplication.ProjectService.Project project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateProjectPassword", ReplyAction="http://tempuri.org/IProjectService/UpdateProjectPasswordResponse")]
        WPFApplication.ProjectService.Project UpdateProjectPassword(int projectID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/DeleteProject", ReplyAction="http://tempuri.org/IProjectService/DeleteProjectResponse")]
        bool DeleteProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetProjectByID", ReplyAction="http://tempuri.org/IProjectService/GetProjectByIDResponse")]
        WPFApplication.ProjectService.Project GetProjectByID(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetProjectByName", ReplyAction="http://tempuri.org/IProjectService/GetProjectByNameResponse")]
        WPFApplication.ProjectService.Project GetProjectByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/CreateSprint", ReplyAction="http://tempuri.org/IProjectService/CreateSprintResponse")]
        WPFApplication.ProjectService.Sprint CreateSprint(WPFApplication.ProjectService.Sprint sprint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/DeleteSprint", ReplyAction="http://tempuri.org/IProjectService/DeleteSprintResponse")]
        bool DeleteSprint(int sprintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateSprint", ReplyAction="http://tempuri.org/IProjectService/UpdateSprintResponse")]
        WPFApplication.ProjectService.Sprint UpdateSprint(WPFApplication.ProjectService.Sprint sprint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetSprintByID", ReplyAction="http://tempuri.org/IProjectService/GetSprintByIDResponse")]
        WPFApplication.ProjectService.Sprint GetSprintByID(int sprintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/CreateStory", ReplyAction="http://tempuri.org/IProjectService/CreateStoryResponse")]
        WPFApplication.ProjectService.Story CreateStory(WPFApplication.ProjectService.Story story);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/DeleteStory", ReplyAction="http://tempuri.org/IProjectService/DeleteStoryResponse")]
        bool DeleteStory(int storyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateStory", ReplyAction="http://tempuri.org/IProjectService/UpdateStoryResponse")]
        WPFApplication.ProjectService.Story UpdateStory(WPFApplication.ProjectService.Story story);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetStoryByID", ReplyAction="http://tempuri.org/IProjectService/GetStoryByIDResponse")]
        WPFApplication.ProjectService.Story GetStoryByID(int storyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/CreateTask", ReplyAction="http://tempuri.org/IProjectService/CreateTaskResponse")]
        WPFApplication.ProjectService.Task CreateTask(WPFApplication.ProjectService.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/DeleteTask", ReplyAction="http://tempuri.org/IProjectService/DeleteTaskResponse")]
        bool DeleteTask(int taskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateTask", ReplyAction="http://tempuri.org/IProjectService/UpdateTaskResponse")]
        WPFApplication.ProjectService.Task UpdateTask(WPFApplication.ProjectService.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetTaskByID", ReplyAction="http://tempuri.org/IProjectService/GetTaskByIDResponse")]
        WPFApplication.ProjectService.Task GetTaskByID(int taskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/CreateMeeting", ReplyAction="http://tempuri.org/IProjectService/CreateMeetingResponse")]
        WPFApplication.ProjectService.Meeting CreateMeeting(WPFApplication.ProjectService.Meeting meeting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/DeleteMeeting", ReplyAction="http://tempuri.org/IProjectService/DeleteMeetingResponse")]
        bool DeleteMeeting(int meetingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateMeeting", ReplyAction="http://tempuri.org/IProjectService/UpdateMeetingResponse")]
        WPFApplication.ProjectService.Meeting UpdateMeeting(WPFApplication.ProjectService.Meeting meeting);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetMeetingByID", ReplyAction="http://tempuri.org/IProjectService/GetMeetingByIDResponse")]
        WPFApplication.ProjectService.Meeting GetMeetingByID(int meetingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllProjects", ReplyAction="http://tempuri.org/IProjectService/GetAllProjectsResponse")]
        WPFApplication.ProjectService.Project[] GetAllProjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/LoginProject", ReplyAction="http://tempuri.org/IProjectService/LoginProjectResponse")]
        bool LoginProject(int projectID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllSprintsInProject", ReplyAction="http://tempuri.org/IProjectService/GetAllSprintsInProjectResponse")]
        WPFApplication.ProjectService.Sprint[] GetAllSprintsInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllStoriesInProject", ReplyAction="http://tempuri.org/IProjectService/GetAllStoriesInProjectResponse")]
        WPFApplication.ProjectService.Story[] GetAllStoriesInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllTasksInProject", ReplyAction="http://tempuri.org/IProjectService/GetAllTasksInProjectResponse")]
        WPFApplication.ProjectService.Task[] GetAllTasksInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllStoriesWithoutSprintInProject", ReplyAction="http://tempuri.org/IProjectService/GetAllStoriesWithoutSprintInProjectResponse")]
        WPFApplication.ProjectService.Story[] GetAllStoriesWithoutSprintInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllMeetingsInProject", ReplyAction="http://tempuri.org/IProjectService/GetAllMeetingsInProjectResponse")]
        WPFApplication.ProjectService.Meeting[] GetAllMeetingsInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllTasksInProjectByState", ReplyAction="http://tempuri.org/IProjectService/GetAllTasksInProjectByStateResponse")]
        WPFApplication.ProjectService.Task[] GetAllTasksInProjectByState(int projectID, WPFApplication.ProjectService.TaskState state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllStoriesInProjectByState", ReplyAction="http://tempuri.org/IProjectService/GetAllStoriesInProjectByStateResponse")]
        WPFApplication.ProjectService.Story[] GetAllStoriesInProjectByState(int projectID, WPFApplication.ProjectService.StoryState state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllStoriesInSprint", ReplyAction="http://tempuri.org/IProjectService/GetAllStoriesInSprintResponse")]
        WPFApplication.ProjectService.Story[] GetAllStoriesInSprint(int sprintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllTasksInSprint", ReplyAction="http://tempuri.org/IProjectService/GetAllTasksInSprintResponse")]
        WPFApplication.ProjectService.Task[] GetAllTasksInSprint(int sprintID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/AddStoryInSprint", ReplyAction="http://tempuri.org/IProjectService/AddStoryInSprintResponse")]
        WPFApplication.ProjectService.StorySprint AddStoryInSprint(WPFApplication.ProjectService.StorySprint storySprint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetAllTasksInStory", ReplyAction="http://tempuri.org/IProjectService/GetAllTasksInStoryResponse")]
        WPFApplication.ProjectService.Task[] GetAllTasksInStory(int storyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateStoryOrder", ReplyAction="http://tempuri.org/IProjectService/UpdateStoryOrderResponse")]
        WPFApplication.ProjectService.Story[] UpdateStoryOrder(int projectID, int[] ordered);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/AddWorkInTask", ReplyAction="http://tempuri.org/IProjectService/AddWorkInTaskResponse")]
        WPFApplication.ProjectService.PersonTask AddWorkInTask(WPFApplication.ProjectService.PersonTask personTask);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProjectServiceChannel : WPFApplication.ProjectService.IProjectService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectServiceClient : System.ServiceModel.ClientBase<WPFApplication.ProjectService.IProjectService>, WPFApplication.ProjectService.IProjectService {
        
        public ProjectServiceClient() {
        }
        
        public ProjectServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WPFApplication.ProjectService.Project CreateProject(WPFApplication.ProjectService.Project project) {
            return base.Channel.CreateProject(project);
        }
        
        public WPFApplication.ProjectService.Project UpdateProject(WPFApplication.ProjectService.Project project) {
            return base.Channel.UpdateProject(project);
        }
        
        public WPFApplication.ProjectService.Project UpdateProjectPassword(int projectID, string password) {
            return base.Channel.UpdateProjectPassword(projectID, password);
        }
        
        public bool DeleteProject(int projectID) {
            return base.Channel.DeleteProject(projectID);
        }
        
        public WPFApplication.ProjectService.Project GetProjectByID(int projectID) {
            return base.Channel.GetProjectByID(projectID);
        }
        
        public WPFApplication.ProjectService.Project GetProjectByName(string name) {
            return base.Channel.GetProjectByName(name);
        }
        
        public WPFApplication.ProjectService.Sprint CreateSprint(WPFApplication.ProjectService.Sprint sprint) {
            return base.Channel.CreateSprint(sprint);
        }
        
        public bool DeleteSprint(int sprintID) {
            return base.Channel.DeleteSprint(sprintID);
        }
        
        public WPFApplication.ProjectService.Sprint UpdateSprint(WPFApplication.ProjectService.Sprint sprint) {
            return base.Channel.UpdateSprint(sprint);
        }
        
        public WPFApplication.ProjectService.Sprint GetSprintByID(int sprintID) {
            return base.Channel.GetSprintByID(sprintID);
        }
        
        public WPFApplication.ProjectService.Story CreateStory(WPFApplication.ProjectService.Story story) {
            return base.Channel.CreateStory(story);
        }
        
        public bool DeleteStory(int storyID) {
            return base.Channel.DeleteStory(storyID);
        }
        
        public WPFApplication.ProjectService.Story UpdateStory(WPFApplication.ProjectService.Story story) {
            return base.Channel.UpdateStory(story);
        }
        
        public WPFApplication.ProjectService.Story GetStoryByID(int storyID) {
            return base.Channel.GetStoryByID(storyID);
        }
        
        public WPFApplication.ProjectService.Task CreateTask(WPFApplication.ProjectService.Task task) {
            return base.Channel.CreateTask(task);
        }
        
        public bool DeleteTask(int taskID) {
            return base.Channel.DeleteTask(taskID);
        }
        
        public WPFApplication.ProjectService.Task UpdateTask(WPFApplication.ProjectService.Task task) {
            return base.Channel.UpdateTask(task);
        }
        
        public WPFApplication.ProjectService.Task GetTaskByID(int taskID) {
            return base.Channel.GetTaskByID(taskID);
        }
        
        public WPFApplication.ProjectService.Meeting CreateMeeting(WPFApplication.ProjectService.Meeting meeting) {
            return base.Channel.CreateMeeting(meeting);
        }
        
        public bool DeleteMeeting(int meetingID) {
            return base.Channel.DeleteMeeting(meetingID);
        }
        
        public WPFApplication.ProjectService.Meeting UpdateMeeting(WPFApplication.ProjectService.Meeting meeting) {
            return base.Channel.UpdateMeeting(meeting);
        }
        
        public WPFApplication.ProjectService.Meeting GetMeetingByID(int meetingID) {
            return base.Channel.GetMeetingByID(meetingID);
        }
        
        public WPFApplication.ProjectService.Project[] GetAllProjects() {
            return base.Channel.GetAllProjects();
        }
        
        public bool LoginProject(int projectID, string password) {
            return base.Channel.LoginProject(projectID, password);
        }
        
        public WPFApplication.ProjectService.Sprint[] GetAllSprintsInProject(int projectID) {
            return base.Channel.GetAllSprintsInProject(projectID);
        }
        
        public WPFApplication.ProjectService.Story[] GetAllStoriesInProject(int projectID) {
            return base.Channel.GetAllStoriesInProject(projectID);
        }
        
        public WPFApplication.ProjectService.Task[] GetAllTasksInProject(int projectID) {
            return base.Channel.GetAllTasksInProject(projectID);
        }
        
        public WPFApplication.ProjectService.Story[] GetAllStoriesWithoutSprintInProject(int projectID) {
            return base.Channel.GetAllStoriesWithoutSprintInProject(projectID);
        }
        
        public WPFApplication.ProjectService.Meeting[] GetAllMeetingsInProject(int projectID) {
            return base.Channel.GetAllMeetingsInProject(projectID);
        }
        
        public WPFApplication.ProjectService.Task[] GetAllTasksInProjectByState(int projectID, WPFApplication.ProjectService.TaskState state) {
            return base.Channel.GetAllTasksInProjectByState(projectID, state);
        }
        
        public WPFApplication.ProjectService.Story[] GetAllStoriesInProjectByState(int projectID, WPFApplication.ProjectService.StoryState state) {
            return base.Channel.GetAllStoriesInProjectByState(projectID, state);
        }
        
        public WPFApplication.ProjectService.Story[] GetAllStoriesInSprint(int sprintID) {
            return base.Channel.GetAllStoriesInSprint(sprintID);
        }
        
        public WPFApplication.ProjectService.Task[] GetAllTasksInSprint(int sprintID) {
            return base.Channel.GetAllTasksInSprint(sprintID);
        }
        
        public WPFApplication.ProjectService.StorySprint AddStoryInSprint(WPFApplication.ProjectService.StorySprint storySprint) {
            return base.Channel.AddStoryInSprint(storySprint);
        }
        
        public WPFApplication.ProjectService.Task[] GetAllTasksInStory(int storyID) {
            return base.Channel.GetAllTasksInStory(storyID);
        }
        
        public WPFApplication.ProjectService.Story[] UpdateStoryOrder(int projectID, int[] ordered) {
            return base.Channel.UpdateStoryOrder(projectID, ordered);
        }
        
        public WPFApplication.ProjectService.PersonTask AddWorkInTask(WPFApplication.ProjectService.PersonTask personTask) {
            return base.Channel.AddWorkInTask(personTask);
        }
    }
}
