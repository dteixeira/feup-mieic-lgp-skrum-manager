//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPF_sKrum.UserService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/ServiceDataTypes")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_sKrum.UserService.Role[] RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_sKrum.UserService.Task[] TasksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobDescription {
            get {
                return this.JobDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobDescriptionField, value) != true)) {
                    this.JobDescriptionField = value;
                    this.RaisePropertyChanged("JobDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoURL {
            get {
                return this.PhotoURLField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoURLField, value) != true)) {
                    this.PhotoURLField = value;
                    this.RaisePropertyChanged("PhotoURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_sKrum.UserService.Role[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_sKrum.UserService.Task[] Tasks {
            get {
                return this.TasksField;
            }
            set {
                if ((object.ReferenceEquals(this.TasksField, value) != true)) {
                    this.TasksField = value;
                    this.RaisePropertyChanged("Tasks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/ServiceDataTypes")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AssignedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_sKrum.UserService.RoleDescription RoleDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AssignedTime {
            get {
                return this.AssignedTimeField;
            }
            set {
                if ((this.AssignedTimeField.Equals(value) != true)) {
                    this.AssignedTimeField = value;
                    this.RaisePropertyChanged("AssignedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((this.ProjectIDField.Equals(value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_sKrum.UserService.RoleDescription RoleDescription {
            get {
                return this.RoleDescriptionField;
            }
            set {
                if ((this.RoleDescriptionField.Equals(value) != true)) {
                    this.RoleDescriptionField = value;
                    this.RaisePropertyChanged("RoleDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://schemas.datacontract.org/2004/07/ServiceDataTypes")]
    [System.SerializableAttribute()]
    public partial class Task : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EstimationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_sKrum.UserService.PersonTask[] PersonTasksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF_sKrum.UserService.TaskState StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Estimation {
            get {
                return this.EstimationField;
            }
            set {
                if ((this.EstimationField.Equals(value) != true)) {
                    this.EstimationField = value;
                    this.RaisePropertyChanged("Estimation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_sKrum.UserService.PersonTask[] PersonTasks {
            get {
                return this.PersonTasksField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonTasksField, value) != true)) {
                    this.PersonTasksField = value;
                    this.RaisePropertyChanged("PersonTasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF_sKrum.UserService.TaskState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StoryID {
            get {
                return this.StoryIDField;
            }
            set {
                if ((this.StoryIDField.Equals(value) != true)) {
                    this.StoryIDField = value;
                    this.RaisePropertyChanged("StoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskID {
            get {
                return this.TaskIDField;
            }
            set {
                if ((this.TaskIDField.Equals(value) != true)) {
                    this.TaskIDField = value;
                    this.RaisePropertyChanged("TaskID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleDescription", Namespace="http://schemas.datacontract.org/2004/07/ServiceDataTypes")]
    public enum RoleDescription : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectManager = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrumMaster = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProductOwner = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TeamMember = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonTask", Namespace="http://schemas.datacontract.org/2004/07/ServiceDataTypes")]
    [System.SerializableAttribute()]
    public partial class PersonTask : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SpentTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SpentTime {
            get {
                return this.SpentTimeField;
            }
            set {
                if ((this.SpentTimeField.Equals(value) != true)) {
                    this.SpentTimeField = value;
                    this.RaisePropertyChanged("SpentTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskID {
            get {
                return this.TaskIDField;
            }
            set {
                if ((this.TaskIDField.Equals(value) != true)) {
                    this.TaskIDField = value;
                    this.RaisePropertyChanged("TaskID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskState", Namespace="http://schemas.datacontract.org/2004/07/ServiceDataTypes")]
    public enum TaskState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Waiting = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InProgress = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Testing = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreatePerson", ReplyAction="http://tempuri.org/IUserService/CreatePersonResponse")]
        WPF_sKrum.UserService.Person CreatePerson(WPF_sKrum.UserService.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdatePerson", ReplyAction="http://tempuri.org/IUserService/UpdatePersonResponse")]
        WPF_sKrum.UserService.Person UpdatePerson(WPF_sKrum.UserService.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdatePersonPassword", ReplyAction="http://tempuri.org/IUserService/UpdatePersonPasswordResponse")]
        WPF_sKrum.UserService.Person UpdatePersonPassword(int personID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeletePerson", ReplyAction="http://tempuri.org/IUserService/DeletePersonResponse")]
        bool DeletePerson(int personID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPersonByID", ReplyAction="http://tempuri.org/IUserService/GetPersonByIDResponse")]
        WPF_sKrum.UserService.Person GetPersonByID(int personID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetPersonByEmail", ReplyAction="http://tempuri.org/IUserService/GetPersonByEmailResponse")]
        WPF_sKrum.UserService.Person GetPersonByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateRole", ReplyAction="http://tempuri.org/IUserService/CreateRoleResponse")]
        WPF_sKrum.UserService.Role CreateRole(WPF_sKrum.UserService.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateRole", ReplyAction="http://tempuri.org/IUserService/UpdateRoleResponse")]
        WPF_sKrum.UserService.Role UpdateRole(WPF_sKrum.UserService.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateRolePassword", ReplyAction="http://tempuri.org/IUserService/UpdateRolePasswordResponse")]
        WPF_sKrum.UserService.Role UpdateRolePassword(int roleID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteRole", ReplyAction="http://tempuri.org/IUserService/DeleteRoleResponse")]
        bool DeleteRole(int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetRoleByID", ReplyAction="http://tempuri.org/IUserService/GetRoleByIDResponse")]
        WPF_sKrum.UserService.Role GetRoleByID(int roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllPeopleInProject", ReplyAction="http://tempuri.org/IUserService/GetAllPeopleInProjectResponse")]
        WPF_sKrum.UserService.Person[] GetAllPeopleInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllRolesInProject", ReplyAction="http://tempuri.org/IUserService/GetAllRolesInProjectResponse")]
        WPF_sKrum.UserService.Role[] GetAllRolesInProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllPeople", ReplyAction="http://tempuri.org/IUserService/GetAllPeopleResponse")]
        WPF_sKrum.UserService.Person[] GetAllPeople();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/LoginAdmin", ReplyAction="http://tempuri.org/IUserService/LoginAdminResponse")]
        bool LoginAdmin(int personID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllTasksInPerson", ReplyAction="http://tempuri.org/IUserService/GetAllTasksInPersonResponse")]
        WPF_sKrum.UserService.Task[] GetAllTasksInPerson(int personID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllRolesInPerson", ReplyAction="http://tempuri.org/IUserService/GetAllRolesInPersonResponse")]
        WPF_sKrum.UserService.Role[] GetAllRolesInPerson(int personID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/LoginProjectAdmin", ReplyAction="http://tempuri.org/IUserService/LoginProjectAdminResponse")]
        bool LoginProjectAdmin(int roleID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllPeopleWorkingInTask", ReplyAction="http://tempuri.org/IUserService/GetAllPeopleWorkingInTaskResponse")]
        WPF_sKrum.UserService.Person[] GetAllPeopleWorkingInTask(int taskID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : WPF_sKrum.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<WPF_sKrum.UserService.IUserService>, WPF_sKrum.UserService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WPF_sKrum.UserService.Person CreatePerson(WPF_sKrum.UserService.Person person) {
            return base.Channel.CreatePerson(person);
        }
        
        public WPF_sKrum.UserService.Person UpdatePerson(WPF_sKrum.UserService.Person person) {
            return base.Channel.UpdatePerson(person);
        }
        
        public WPF_sKrum.UserService.Person UpdatePersonPassword(int personID, string password) {
            return base.Channel.UpdatePersonPassword(personID, password);
        }
        
        public bool DeletePerson(int personID) {
            return base.Channel.DeletePerson(personID);
        }
        
        public WPF_sKrum.UserService.Person GetPersonByID(int personID) {
            return base.Channel.GetPersonByID(personID);
        }
        
        public WPF_sKrum.UserService.Person GetPersonByEmail(string email) {
            return base.Channel.GetPersonByEmail(email);
        }
        
        public WPF_sKrum.UserService.Role CreateRole(WPF_sKrum.UserService.Role role) {
            return base.Channel.CreateRole(role);
        }
        
        public WPF_sKrum.UserService.Role UpdateRole(WPF_sKrum.UserService.Role role) {
            return base.Channel.UpdateRole(role);
        }
        
        public WPF_sKrum.UserService.Role UpdateRolePassword(int roleID, string password) {
            return base.Channel.UpdateRolePassword(roleID, password);
        }
        
        public bool DeleteRole(int roleID) {
            return base.Channel.DeleteRole(roleID);
        }
        
        public WPF_sKrum.UserService.Role GetRoleByID(int roleID) {
            return base.Channel.GetRoleByID(roleID);
        }
        
        public WPF_sKrum.UserService.Person[] GetAllPeopleInProject(int projectID) {
            return base.Channel.GetAllPeopleInProject(projectID);
        }
        
        public WPF_sKrum.UserService.Role[] GetAllRolesInProject(int projectID) {
            return base.Channel.GetAllRolesInProject(projectID);
        }
        
        public WPF_sKrum.UserService.Person[] GetAllPeople() {
            return base.Channel.GetAllPeople();
        }
        
        public bool LoginAdmin(int personID, string password) {
            return base.Channel.LoginAdmin(personID, password);
        }
        
        public WPF_sKrum.UserService.Task[] GetAllTasksInPerson(int personID) {
            return base.Channel.GetAllTasksInPerson(personID);
        }
        
        public WPF_sKrum.UserService.Role[] GetAllRolesInPerson(int personID) {
            return base.Channel.GetAllRolesInPerson(personID);
        }
        
        public bool LoginProjectAdmin(int roleID, string password) {
            return base.Channel.LoginProjectAdmin(roleID, password);
        }
        
        public WPF_sKrum.UserService.Person[] GetAllPeopleWorkingInTask(int taskID) {
            return base.Channel.GetAllPeopleWorkingInTask(taskID);
        }
    }
}
